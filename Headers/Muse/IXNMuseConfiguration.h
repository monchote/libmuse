// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from museinfo.djinni

#import "IXNMusePreset.h"
#import "IXNNotchFrequency.h"
#import <Foundation/Foundation.h>

/** Encapsulates the configuration information of the Muse headband. */

@interface IXNMuseConfiguration : NSObject
- (id)initWithMuseConfiguration:(IXNMuseConfiguration *)museConfiguration;
- (id)initWithPreset:(IXNMusePreset)preset eegChannelCount:(int32_t)eegChannelCount afeGain:(int32_t)afeGain downsampleRate:(int32_t)downsampleRate seroutMode:(int32_t)seroutMode outputFrequency:(int32_t)outputFrequency adcFrequency:(int32_t)adcFrequency notchFilterEnabled:(BOOL)notchFilterEnabled notchFilter:(IXNNotchFrequency)notchFilter accelerometerSampleFrequency:(int32_t)accelerometerSampleFrequency batteryDataEnabled:(BOOL)batteryDataEnabled drlRefEnabled:(BOOL)drlRefEnabled drlRefFrequency:(int32_t)drlRefFrequency batteryPercentRemaining:(double)batteryPercentRemaining bluetoothMac:(NSString *)bluetoothMac serialNumber:(NSString *)serialNumber;

/** Provides access to current preset. */
@property (nonatomic, readonly) IXNMusePreset preset;

/** Number of channels currently active. */
@property (nonatomic, readonly) int32_t eegChannelCount;

/** Gain to apply to incoming EEG samples. */
@property (nonatomic, readonly) int32_t afeGain;

/** EEG downsampling rate. */
@property (nonatomic, readonly) int32_t downsampleRate;

/** Serial output mode. 2 - compressed (10 bits) 3 - uncompressed (16 bits) */
@property (nonatomic, readonly) int32_t seroutMode;

/** Headband output frequency in Hz. */
@property (nonatomic, readonly) int32_t outputFrequency;

/** Headband ADC frequency in Hz. */
@property (nonatomic, readonly) int32_t adcFrequency;

/** Provides information about notch filter state (on/off). */
@property (nonatomic, readonly) BOOL notchFilterEnabled;

/** Provides information about notch filter frequency (50Hz/60Hz). */
@property (nonatomic, readonly) IXNNotchFrequency notchFilter;

/** Returns accelerometer sample frequency in Hz. */
@property (nonatomic, readonly) int32_t accelerometerSampleFrequency;

/** Provides information about battery data transmission state (on/off). */
@property (nonatomic, readonly) BOOL batteryDataEnabled;

/** Provides information about DRL/REF transmission state (on/off). */
@property (nonatomic, readonly) BOOL drlRefEnabled;

/**
 * DRL/REF data output frequency in Hz.
 * 0 if DRL/REF is not enabled.
 */
@property (nonatomic, readonly) int32_t drlRefFrequency;

/** Returns battery charge remaining in percent. */
@property (nonatomic, readonly) double batteryPercentRemaining;

/** Bluetooth MAC address reported by device. */
@property (nonatomic, readonly) NSString *bluetoothMac;

/** Serial number reported by device. */
@property (nonatomic, readonly) NSString *serialNumber;

@end
